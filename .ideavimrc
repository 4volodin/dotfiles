"source ~/.vimrc

""" Plugins ---------------------------------------------
Plug 'easymotion/vim-easymotion'          "Requires IdeaVim-EasyMotion. Lots of mappings
Plug 'terryma/vim-multiple-cursors'       "See below for remapped keys. <A-n> doesn't work on Mac
Plug 'machakann/vim-highlightedyank'      "set highlightedyank
Plug 'preservim/nerdtree'                 "set NERDTree
Plug 'tpope/vim-commentary'               "set commentary [count]gc{motion}, o_gc, v_gc, gcc
Plug 'tpope/vim-surround'                 "set surround ys, cs, ds, S
Plug 'michaeljsmith/vim-indent-object'

Plug 'vim-scripts/argtextobj.vim'         " argument text objects: aa, ia; daa - delete argument
Plug 'kana/vim-textobj-entire'            " vae, dae, cae - visual,del,change ae -all text object

" Common settings
set number relativenumber
set showmode
set smartcase
set history=1000
set scrolloff=3                           " 3 lines above/below cursor when scrolling
set incsearch
set hlsearch
set ignorecase smartcase
set visualbell
set clipboard+=unnamed
set clipboard+=ideaput

" IDEA specific settings
set ideajoin                              " use Idea to join lines smartly
set ideamarks                             "Sync IJ bookmarks and Vim marks
set idearefactormode=keep                 "don't change the mode during refactoring

let mapleader = " "

nnoremap <c-w>R :action IdeaVim.ReloadVimRc.reload<CR>

inoremap jj <Esc>

" Movement cursor
nmap j gj
nmap k gk

"" Using Command + S  to save
nnoremap <M-s> :w<CR>
inoremap <M-s> <C-O>:w<CR><Esc>

" Act like D and C
nnoremap Y y$
nnoremap V v$

" VisualSelection string
nnoremap vv V

" After block yank and paste, move cursor to the end of operated text and don't override register
vnoremap y y`]
vnoremap p "_dP`]
nnoremap p p`]

" Yank and paste from clipboard
nnoremap ,y "+y
vnoremap ,y "+y
nnoremap ,yy "+yy
nnoremap ,p "+p

" Don't yank to default register when changing something
nnoremap c "xc
xnoremap c "xc

" Make the dot command work as expected in visual mode (via
" https://www.reddit.com/r/vim/comments/3y2mgt/do_you_have_any_minor_customizationsmappings_that/cya0x04)
vnoremap . :norm.<CR>

" Center screen when jumping to next match
nnoremap n nzz
nnoremap N Nzz
vnoremap n nzz
vnoremap N Nzz

"" Turn off recording
map q <Nop>

" move line(s) up/down
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :action MoveLineDown<CR>
vnoremap <A-k> :action MoveLineUp<CR>

" Indent without kill the selection in vmode
nmap < <<
nmap > >>
vmap < <gv
vmap > >gv
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv
nnoremap <TAB> :action PreviousTab<CR>
nnoremap <s-TAB> :action NextTab<CR>

let g:argtextobj_pairs="[:],(:),<:>"

" easy find
map <leader>e <Plug>(easymotion-f)
map <leader>E <Plug>(easymotion-s)

" Formating
nmap <leader>F :action ReformatCode<CR>
vmap <leader>F :action ReformatCode<CR>

" Jumping - Map ctrl-movement keys to window switching
map <C-h> <C-w>h
map <c-j> <c-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" for tabs create and switching
nnoremap tn :tabnew<Space>
nnoremap tl :tabnext<CR>
nnoremap th :tabprev<CR>
"nnoremap <c-s-tab> gT
"nnoremap <c-tab> gt
"inoremap <c-s-tab> :tabp
"inoremap <c-tab> :tabn

" Search Find Replace
nnoremap / /
nnoremap ,/ :%s///<left><left>
nnoremap g/ :action FindInPath<cr>
nnoremap <silent> <leader>/ :nohlsearch<CR>

" ---------------------------------------------------------------------
" IDEA Actions {{{
" ---------------------------------------------------------------------
" folding
map zf <Action>(CollapseSelection)

map <C-g> <action>(ActivateTerminalToolWindow)
nnoremap <leader>t :action Terminal.OpenInTerminal<CR>
"" JumpToChange
map g; <Action>(JumpToLastChange)
map g, <Action>(JumpToNextChange)

" Keys from coc.nvim
nmap ]g :action GotoNextError<cr>
nmap [g :action GotoPreviousError<cr>

" Keys from vim-gitgutter
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap =c <Action>(VcsShowCurrentChangeMarker)        " Not from vim-gitgutter. ={motion} is for indenting. =c does nothing

" Moving statements
nmap [s :action MoveStatementUp<cr>
nmap ]s :action MoveStatementDown<cr>
" unimpaired mappings
nnoremap [m :action MethodUp<cr>
nnoremap ]m :action MethodDown<cr>

"" Splits manipulation
nmap <C-s>s :action SplitHorizontally<cr>
nmap <C-s>v :action SplitVertically<cr>

" Pasting from yank history
nnoremap <leader>P :action PasteMultiple<CR>

" options
nnoremap cow :action EditorToggleUseSoftWraps<cr>
nnoremap col :action EditorToggleShowWhitespaces<cr>

" for Multiple Cursors
nnoremap <A-l> :action EditorCloneCaretBelow<cr>
nnoremap <A-h> :action EditorCloneCaretAbove<cr>
nnoremap <A-c> :action EditorAddOrRemoveCaret<cr>
" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence

" Note that the default <A-n> and g<A-n> shortcuts don't work on Mac due to dead keys.
" <A-n> is used to enter accented text e.g. Ã±
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences

" Comment and UnComment the same shortcuts
" nnoremap gc :action CommentByLineComment<CR>
" vmap gc :action CommentByLineComment<CR>
vmap gC :action CommentByBlockComment<CR>

"" NERDTree
nnoremap ,, :action ActivateProjectToolWindow<CR>
nmap <C-\> :NERDTreeFind<CR>

" Refactorings
nnoremap <leader>rr :action Refactorings.QuickListPopupAction<CR>
nnoremap <leader>re :action RenameElement<CR>
nnoremap <leader>rf :action RenameFile<CR>
nnoremap <leader>ri :action Inline<CR>
nnoremap <leader>rm :action ExtractMethod<CR>
nnoremap <leader>iv :action IntroduceVariable<CR>
nnoremap <leader>ip :action IntroduceParameter<CR>

vmap <leader>rr :action Refactorings.QuickListPopupAction<CR>
vmap <leader>re :action RenameElement<CR>
vmap <leader>rf :action RenameFile<CR>
vmap <leader>ri :action Inline<CR>
vmap <leader>rm :action ExtractMethod<CR>
vmap <leader>iv :action IntroduceVariable<CR>
vmap <leader>ip :action IntroduceParameter<CR>

nmap <leader>im :action ImplementMethods<CR>
nmap <leader>om :action OverrideMethods<CR>
nmap <leader>ia :action ShowIntentionActions<CR>
nmap <leader>oi :action OptimizeImports<cr>
nmap <leader>ic :action InspectCode<cr>

nmap <leader>G :action Generate<cr>

nnoremap K :action JS.TypeInfo<CR>
vmap K :action JS.TypeInfo<CR>
nmap <leader>ip :action ParameterInfo<CR>
nmap <leader>qi :action QuickImplementations<CR>

nmap <leader>Q :action ReopenClosedTab<cr>
nmap <leader>S :action Switcher<cr>
nmap <leader>M :action ActivateStructureToolWindow<cr>
nmap <leader>I :action SelectIn<cr>
nmap <leader>B :action ShowBookmarks<cr>
nmap <leader>L :action RecentLocations<cr>
nmap <leader>N :action RecentFiles<cr>
"nmap <leader>E :action ShowErrorDescription<cr>

" Undo
nmap <leader>H :action LocalHistory.ShowHistory<CR>
nmap <leader>U :action FindUsages<cr>

nmap <leader>;; :action EditorTabPopupMenu<cr>
nmap <leader>;s :action FileStructurePopup<cr>
nmap <leader>;e :action EditorPopupMenu<cr>

" Git operations
nmap ,gm :action Git.ContextMenu<cr>
nmap ,gl :action Vcs.Show.Log<cr>
nmap ,gd :action Compare.LastVersion<cr>
nmap ,gs :action Vcs.Show.Local.Changes<cr>
"nmap <leader>yp :action Vcs.QuickListPopupAction<cr>
nmap ,ga :action Annotate<cr>
nmap ,gr :action Git.ResolveConflicts<cr>

"https://gist.github.com/dewaka/ef947e52767bf453eaf77c852051eb7e
nmap <leader>gc :action GotoClass<cr>
nmap <leader>gf :action GotoFile<cr>
nmap <leader>gs :action GotoSymbol<cr>
nmap <leader>ga :action GotoAction<CR>
nmap <leader>gd :action GotoDeclaration<cr>
nmap <leader>gi :action GotoImplementation<cr>
nmap <leader>T :action GotoTest<cr>

" Building, Running and Debugging
nmap <leader>bb :action ToggleLineBreakpoint<cr>
nnoremap ,c :action CompileDirty<cr>
nnoremap ,rr :action Run<cr>
nnoremap ,R :action Rerun<cr>
nnoremap ,ra :action RunAnything<cr>
nnoremap ,rc :action RunClass<cr>
nnoremap ,dd :action Debug<cr>
nnoremap ,dc :action DebugClass<cr>
nnoremap ,t :action RerunTests<cr>
nnoremap ,T :action RerunFailedTests<cr>
" }}} IDEA Actions
