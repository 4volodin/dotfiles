# default config alacritty:  https://github.com/alacritty/alacritty/blob/master/alacritty.yml
#
import:
   - "~/.config/alacritty/themes/themes/github_light.yaml"

window:
  decorations: "buttonless"
  padding:
    x: 0
    y: 0
  dynamic_padding: true # Spread additional padding evenly around the terminal content.
#  decorations: full     # none - disable top bar
  startup_mode: Windowed

scrolling:
  history: 2500
  multiplier: 3

# Font configuration (changes require restart)
# https://www.nerdfonts.com/font-downloads
font:
  normal:
    family: JetBrainsMono Nerd Font #Hack Nerd Font Mono # Meslo #Source Code Pro, JetBrains Mono
  bold:
    family: JetBrainsMono Nerd Font #Hack Nerd Font Mono # Meslo #Source Code Pro, JetBrains Mono
    style: Bold
  italic:
    family: JetBrainsMono Nerd Font #Hack Nerd Font Mono # Meslo #Source Code Pro, JetBrains Mono
    style: Italic

  # Point size of the font
  size: 14.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Setup term for programs to be able to use it
#env:
#  TERM: alacritty

#  for true color, italics with tmux vim
env:
  TERM: xterm-256color

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  # # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard
  save_to_clipboard: true

# Live config reload (changes require restart)
live_config_reload: true

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true
key_bindings:
  # TODO keys for swap tmux panes
  # keys for quickly switch windows ctrl+1 ctrl+2 ...
  - { key: Key1, mods: Command, chars: "\x13\x31" }
  - { key: Key2, mods: Command, chars: "\x13\x32" }
  - { key: Key3, mods: Command, chars: "\x13\x33" }
  - { key: Key4, mods: Command, chars: "\x13\x34" }
  - { key: Key5, mods: Command, chars: "\x13\x35" }
  - { key: Key6, mods: Command, chars: "\x13\x36" }
  - { key: Key7, mods: Command, chars: "\x13\x37" }
  - { key: Key8, mods: Command, chars: "\x13\x38" }
  - { key: Key9, mods: Command, chars: "\x13\x39" }

  - { key: T, mods: Command, chars: "\x13\x63" } # tmux: create new window ctr+s-c
  - { key: W, mods: Command, chars: "\x13\x78" } # tmux: close window
  # resize window
  - { key: H, mods: Command|Shift, chars: "\x13\x48" } # tmux: ctrl-s + shift-h
  - { key: J, mods: Command|Shift, chars: "\x13\x4a" } # tmux: ctrl-s + shift-j
  - { key: K, mods: Command|Shift, chars: "\x13\x4b" } # tmux: ctrl-s + shift-k
  - { key: L, mods: Command|Shift, chars: "\x13\x4c" } # tmux: ctrl-s + shift-l
  # split panels
  - { key: D, mods: Command, chars: "\x13\x25" }
  - { key: D, mods: Command|Shift, chars: "\x13\x22" }

  - { key: S, mods: Command, chars: "\x1b\x5b\x31\x37\x7e" } # save in vim, emulate <F6> key
  - { key: H, mods: Alt, chars: "\x1bh" } # prev tmux window
  - { key: L, mods: Alt, chars: "\x1bl" } # next tmux window
    #  - { key: S, mods: Alt, chars: "\x1bs" } # list tmux sessions
  - { key: Z, mods: Alt, chars: "\x1bz" } # zoom tmux panel
  - { key: 84, chars: "\x1bz" } # zoom tmux panel, open Terminal: alacritty --print-events and look key pressed codes
  - { key: M, mods: Alt, chars: "\x1bm" } # tmux menu
  - { key: Key0, mods: Alt, chars: "\x1b0" } # go to prev tmux panel

  - { key: Back, mods: Command, chars: "\x15" } # delete string back
  - { key: Back, mods: Alt, chars: "\x1b\x7f" } # delete word back

  # Send Escape seauence to HEX code ^[d  == "\x1bd"
  - { key: Delete, mods: Alt, chars: "\x1bd" } # delete word forward

  - { key: Left, mods: Alt, chars: "\x1bb" } # jump cursor to back word
  - { key: Right, mods: Alt, chars: "\x1bf" } # jump cursor to forward word

  # Home, End
  - { key: Left, mods: Command, chars: "\x1bOH", mode: AppCursor }
  - { key: Right, mods: Command, chars: "\x1bOF", mode: AppCursor }
  - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
  - { key: End, chars: "\x1b[F", mode: ~AppCursor }

  - { key: LBracket, mods: Command, chars: "\x5c\x70" } #  # Use command + [ - to go to previous tmux window
  - { key: RBracket, mods: Command, chars: "\x5c\x6e" } # Use command + ] - to go to previous tmux window

  - { key: K, mods: Alt, chars: "\x1bk" } # move up string in vim
  - { key: J, mods: Alt, chars: "\x1bj" } # move down string in vim

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block, - _ Underline, - | Beam
  style:
    shape: Beam
    blinking: Always
  blink_interval: 500
  blink_timeout: 0
  thickness: 0.24
  vi_mode_style:
    shape: Block

# The 'Dark dimmed' colorscheme from Github.
## schemes:
##  github_light: &dark
##  github_light: &light
## colors: *dark
