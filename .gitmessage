# <type>: <subject>
# <BLANK LINE>
# [optional body]
# <BLANK LINE>
# [optional footer(s)]
#=======================================================================
# type
#   fix:      A bug fix
#   feat:     A new features
#   refactor: A code change that neither fixes a bug nor adds a feature
#   perf:     A code change that improves performance
#   style:    Changes that do not affect the meaning of the code
#   test:     Adding missing or correcting existing tests
#   docs:     Documentation only changes
#   chore:    Other changes that don't modify src or test files
#   build:    Changes that affect the build system or external dependencies
#   ci:       Changes to our CI configuration files and scripts
#   revert:   Reverts a previous commit
#
# subject: Short summary - 50 chars or less
#   - Do not end with a period
#   - Start writing in lower case
#   - Use the imperative mood
#
# optional body: Explain why this change/commit is being made.
#   - Wrap it to about 100 characters or so
#   - Can use multiple lines with "-" for bullet points
#   - Explain what and why vs. how
#
# optional footer(s): Provide links or keys to any relevant tickets
#   - Wrap it to about 100 characters or so
#   Linking a pull request to an issue using a keyword
#     - close #ISSUE-NUMBER
#     - fix #ISSUE-NUMBER
#     - resolve #ISSUE-NUMBER
# --------------------
# Conventional Commits
# A specification for adding human and machine readable meaning to commit messages
# Ref: https://www.conventionalcommits.org
# --------------------
